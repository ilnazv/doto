{"version":3,"sources":["Pages/Dashboard/Dashboard.module.scss","Pages/Dashboard/HeroService.ts","Pages/Dashboard/Dashboard.tsx"],"names":["module","exports","dashboard","hero","cardMedia","heroesService","loadHeroStats","_loadHeroStats","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","heroes","wrap","_context","prev","next","fetch","sent","json","abrupt","map","x","name","localized_name","imageUrl","img","iconUrl","icon","attack_type","stop","apply","this","arguments","baseApiUrl","Dashboard","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","then","setState","react_default","createElement","className","css","Grid","container","direction","justify","alignItems","spacing","key","item","Hero","React","Component","imageFullUrl","iconFullUrl","Card","CardHeader","avatar","Avatar","src","title","subheader","CardMedia","image"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,KAAA,wBAAAC,UAAA,2JCCLC,EAAgB,CACzBC,cAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACC,yCADDF,EAAAE,KAAA,EAEYC,MADX,0CADD,cAELN,EAFKG,EAAAI,KAAAJ,EAAAE,KAAA,EAGUL,EAASQ,OAHnB,cAGLP,EAHKE,EAAAI,KAAAJ,EAAAM,OAAA,SAIJR,EAAOS,IAAI,SAACC,GAAD,MAAmB,CACjCC,KAAMD,EAAEE,eACRC,SAAUH,EAAEI,IACZC,QAASL,EAAEM,KACXC,YAAaP,EAAEO,gBARR,wBAAAf,EAAAgB,SAAApB,MAAF,yBAAAN,EAAA2B,MAAAC,KAAAC,YAAA,mGCEjB,IAAMC,EAAa,2BAaEC,cACjB,SAAAA,EAAYC,GAAqB,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAA2B,KAAAG,IAC7BE,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAA2B,KAAA3B,OAAAmC,EAAA,EAAAnC,CAAA8B,GAAAM,KAAAT,KAAMI,KACDM,MAAQ,CACT9B,OAAQ,IAHiByB,mFAOb,IAAAM,EAAAX,KAChB9B,EAAcC,gBAAgByC,KAAK,SAAAhC,GAAM,OAAI+B,EAAKE,SAAS,CACvDjC,8CAKJ,OACIkC,EAAAtC,EAAAuC,cAAA,OAAKC,UAAWC,IAAIlD,WAChB+C,EAAAtC,EAAAuC,cAACG,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,aACXC,QAAS,GAERvB,KAAKU,MAAM9B,OAAOS,IAAI,SAAAC,GAAC,OACpBwB,EAAAtC,EAAAuC,cAACG,EAAA,EAAD,CAAMM,IAAKlC,EAAEC,KAAMkC,MAAI,GAACX,EAAAtC,EAAAuC,cAACW,EAAD,CAAM1D,KAAMsB,gBAzBrBqC,IAAMC,WAiC7C,SAASF,EAAKtB,GACV,IAAMyB,EAAe3B,EAAaE,EAAMpC,KAAKyB,SACvCqC,EAAc5B,EAAaE,EAAMpC,KAAK2B,QAC5C,OAAOmB,EAAAtC,EAAAuC,cAACgB,EAAA,EAAD,CAAMf,UAAWC,IAAIjD,MACxB8C,EAAAtC,EAAAuC,cAACiB,EAAA,EAAD,CACIC,OACInB,EAAAtC,EAAAuC,cAACmB,EAAA,EAAD,CAAQC,IAAKL,IAGjBM,MAAOhC,EAAMpC,KAAKuB,KAClB8C,UAAWjC,EAAMpC,KAAK6B,cAE1BiB,EAAAtC,EAAAuC,cAACuB,EAAA,EAAD,CACItB,UAAWC,IAAIhD,UACfsE,MAAOV","file":"static/js/4.c7e6a989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2roKQ\",\"hero\":\"Dashboard_hero__1XJ1G\",\"cardMedia\":\"Dashboard_cardMedia__2Gqx-\"};","import { IHero } from \"./Dashboard\";\r\n\r\nexport const heroesService = {\r\n    loadHeroStats: async () => {\r\n        const url = 'https://api.opendota.com/api/heroStats';\r\n        const response = await fetch(url);\r\n        const heroes = await response.json();\r\n        return heroes.map((x: any) => <IHero>{\r\n            name: x.localized_name,\r\n            imageUrl: x.img,\r\n            iconUrl: x.icon,\r\n            attack_type: x.attack_type\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { heroesService } from \"./HeroService\";\r\nimport css from './Dashboard.module.scss';\r\nimport { Card, Grid, Avatar, CardHeader, CardMedia } from '@material-ui/core';\r\n\r\nconst baseApiUrl = \"https://api.opendota.com\";\r\n\r\nexport interface IHero {\r\n    name: string;\r\n    imageUrl: string;\r\n    iconUrl: string;\r\n    attack_type: string;\r\n}\r\n\r\ninterface DashboardProps {\r\n    heroes: IHero[];\r\n}\r\n\r\nexport default class Dashboard extends React.Component<{}, DashboardProps> {\r\n    constructor(props: Readonly<{}>) {\r\n        super(props);\r\n        this.state = {\r\n            heroes: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        heroesService.loadHeroStats().then(heroes => this.setState({\r\n            heroes\r\n        }));\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className={css.dashboard}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={2}\r\n                >\r\n                    {this.state.heroes.map(x =>\r\n                        <Grid key={x.name} item><Hero hero={x}></Hero></Grid>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Hero(props: { hero: IHero }) {\r\n    const imageFullUrl = baseApiUrl + props.hero.imageUrl;\r\n    const iconFullUrl = baseApiUrl + props.hero.iconUrl;\r\n    return <Card className={css.hero}>\r\n        <CardHeader\r\n            avatar={\r\n                <Avatar src={iconFullUrl}>\r\n                </Avatar>\r\n            }\r\n            title={props.hero.name}\r\n            subheader={props.hero.attack_type}\r\n        />\r\n        <CardMedia\r\n            className={css.cardMedia}\r\n            image={imageFullUrl}\r\n        />\r\n    </Card>;\r\n}"],"sourceRoot":""}