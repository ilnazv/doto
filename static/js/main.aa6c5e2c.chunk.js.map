{"version":3,"sources":["Pages/Dashboard/HeroCard.tsx","Shared/Components/Layout.tsx","Pages/Dashboard/HeroService.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","HeroCard","HeroLink","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","useStyles","makeStyles","theme","createStyles","hero","width","backgroundColor","cardMedia","height","paddingTop","cardTitle","fontSize","cardSubheader","props","classes","a","createElement","key","name","path","concat","className","raised","square","avatar","minimized","src","iconUrl","undefined","title","titleTypographyProps","subheader","attack_type","subheaderTypographyProps","image","imageUrl","withRouter","onClick","history","push","children","main","background","top","left","position","zIndex","drawer","flexShrink","drawerPaper","Object","defineProperty","mixins","toolbar","minHeight","breakpoints","up","spacing","contentHeader","objectSpread","content","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","marginLeft","Layout","_React$useState","React","useState","_React$useState2","slicedToArray","openDrawer","setMinimized","loading","react_default","Fragment","AppBar","Toolbar","Grid","container","direction","justify","alignItems","item","Icon","IconButton","color","aria-label","edge","LinearProgress","Drawer","variant","anchor","open","paper","Divider","List","map","text","index","ListItem","button","ListItemIcon","Inbox","Mail","ListItemText","primary","clsx","baseApiUrl","heroesService","loadHeroStats","_loadHeroStats","asyncToGenerator","regenerator_default","mark","_callee","url","response","heroes","wrap","_context","prev","next","fetch","sent","json","abrupt","x","localized_name","img","icon","stop","apply","this","arguments","Dashboard","lazy","e","then","bind","HeroStats","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleToggle","setState","state","getHeroByName","find","includes","_this2","_this3","_this$state","react_router_dom","basename","process","Layout_Layout","react","fallback","react_router","exact","render","assign","match","params","id","Component","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa6c5e2c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  CardMedia,\r\n  ButtonBase\r\n} from \"@material-ui/core\";\r\nimport { IHero } from \"./Dashboard\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    hero: {\r\n      width: \"150px\",\r\n      backgroundColor: \"#ffffff14\"\r\n    },\r\n\r\n    cardMedia: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\"\r\n    },\r\n\r\n    cardTitle: {\r\n      fontSize: 12\r\n    },\r\n\r\n    cardSubheader: {\r\n      fontSize: 10\r\n    }\r\n  })\r\n);\r\n\r\nexport function HeroCard(props: {\r\n  hero: IHero;\r\n  minimized: boolean;\r\n}): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <HeroLink key={props.hero.name} path={`/hero/${props.hero.name}`}>\r\n      <Card className={classes.hero} raised={true} square={true}>\r\n        <CardHeader\r\n          avatar={\r\n            props.minimized ? <Avatar src={props.hero.iconUrl} /> : undefined\r\n          }\r\n          title={props.hero.name}\r\n          titleTypographyProps={{\r\n            className: classes.cardTitle\r\n          }}\r\n          subheader={props.hero.attack_type}\r\n          subheaderTypographyProps={{\r\n            className: classes.cardSubheader\r\n          }}\r\n        />\r\n        {!props.minimized && (\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={props.hero.imageUrl}\r\n          />\r\n        )}\r\n      </Card>\r\n    </HeroLink>\r\n  );\r\n}\r\n\r\nexport const HeroLink = withRouter((props: any) => (\r\n  <ButtonBase onClick={() => props.history.push(props.path)}>\r\n    {props.children}\r\n  </ButtonBase>\r\n));\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Icon,\r\n  LinearProgress,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { Inbox, Mail } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport { HeroLink } from \"../../Pages/Dashboard/HeroCard\";\r\n\r\nconst drawerWidth = 240;\r\nconst gradColor0 = \"#495591\";\r\nconst gradColor1 = \"#1e254c\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    main: {},\r\n\r\n    background: {\r\n      top: 0,\r\n      left: 0,\r\n      height: \"calc(100% + 56px)\", //56px - mobile browser address bar size\r\n      width: \"100%\",\r\n      position: \"fixed\",\r\n      background: `radial-gradient(ellipse at 0% 0%, ${gradColor0} 0%, ${gradColor1} 100%)`,\r\n      zIndex: -1\r\n    },\r\n\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      top: theme.mixins.toolbar.minHeight,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        top: theme.spacing(8)\r\n      }\r\n    },\r\n    contentHeader: {\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      marginLeft: drawerWidth\r\n    }\r\n  })\r\n);\r\n\r\nexport const Layout = (\r\n  props: React.PropsWithChildren<{ setMinimized: () => void; loading: boolean }>\r\n) => {\r\n  const [openDrawer, setOpenDrawer] = React.useState(false);\r\n  const classes = useStyles();\r\n  const { setMinimized, loading } = props;\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <HeroLink path=\"/\">\r\n                <Icon>dashboard</Icon>\r\n              </HeroLink>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"minimize toggle\"\r\n                edge=\"end\"\r\n                onClick={setMinimized}\r\n              >\r\n                <Icon>photo_size_select_large</Icon>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.main}>\r\n        <div className={classes.background} />\r\n        <div className={classes.contentHeader} />\r\n        {loading && <LinearProgress />}\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <Divider />\r\n          <List>\r\n            {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <Inbox /> : <Mail />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <div\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: openDrawer\r\n          })}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","import { IHero } from \"./Dashboard\";\r\n\r\nconst baseApiUrl = \"https://api.opendota.com\";\r\n\r\nexport const heroesService = {\r\n    loadHeroStats: async () => {\r\n        const url = `${baseApiUrl}/api/heroStats`;\r\n        const response = await fetch(url);\r\n        const heroes = await response.json();\r\n        return heroes.map((x: any) => ({\r\n            name: x.localized_name,\r\n            imageUrl: baseApiUrl + x.img,\r\n            iconUrl: baseApiUrl + x.icon,\r\n            attack_type: x.attack_type\r\n        } as IHero));\r\n    }\r\n}\r\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Layout } from \"./Shared/Components/Layout\";\nimport { heroesService } from \"./Pages/Dashboard/HeroService\";\nimport { IHero } from \"./Pages/Dashboard/Dashboard\";\n\ninterface AppState {\n  minimized: boolean;\n  heroes: IHero[];\n  loading: boolean;\n}\n\nconst Dashboard = React.lazy(() => import(\"./Pages/Dashboard/Dashboard\"));\nconst HeroStats = React.lazy(() => import(\"./Pages/HeroStats/HeroStats\"));\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      minimized: false,\n      heroes: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    heroesService.loadHeroStats().then(heroes =>\n      this.setState({\n        heroes,\n        loading: false\n      })\n    );\n  }\n\n  private handleToggle = () => {\n    this.setState({\n      minimized: !this.state.minimized\n    });\n  };\n\n  private getHeroByName = (name: string): IHero => {\n    return (\n      this.state.heroes.find(x => x.name.includes(name)) || {\n        attack_type: \"undefined\",\n        iconUrl: \"undefined\",\n        imageUrl: \"undefined\",\n        name: \"undefined\"\n      }\n    );\n  };\n\n  public render() {\n    const { minimized, heroes, loading } = this.state;\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Layout setMinimized={this.handleToggle} loading={loading}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Dashboard\n                    minimized={minimized}\n                    heroes={heroes}\n                    key=\"dashboard\"\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/hero/:id\"\n                render={props => (\n                  <HeroStats\n                    hero={this.getHeroByName(props.match.params.id)}\n                    {...props}\n                    key=\"herostats\"\n                  />\n                )}\n              />\n            </Switch>\n          </Suspense>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}