{"version":3,"sources":["Pages/Dashboard/Dashboard.module.scss","Pages/Dashboard/HeroService.ts","Pages/Dashboard/Dashboard.tsx"],"names":["module","exports","dashboard","dashboard__background","hero","cardMedia","heroesService","loadHeroStats","_loadHeroStats","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","heroes","wrap","_context","prev","next","fetch","sent","json","abrupt","map","x","name","localized_name","imageUrl","img","iconUrl","icon","attack_type","stop","apply","this","arguments","baseApiUrl","Dashboard","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","then","setState","react_default","createElement","Fragment","className","css","Grid","container","direction","justify","alignItems","spacing","key","item","Hero","React","Component","imageFullUrl","iconFullUrl","Card","CardHeader","avatar","Avatar","src","title","subheader","CardMedia","image"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,6BAAAC,sBAAA,yCAAAC,KAAA,wBAAAC,UAAA,mKCCLC,EAAgB,CACzBC,cAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACC,yCADDF,EAAAE,KAAA,EAEYC,MADX,0CADD,cAELN,EAFKG,EAAAI,KAAAJ,EAAAE,KAAA,EAGUL,EAASQ,OAHnB,cAGLP,EAHKE,EAAAI,KAAAJ,EAAAM,OAAA,SAIJR,EAAOS,IAAI,SAACC,GAAD,MAAa,CAC3BC,KAAMD,EAAEE,eACRC,SAAUH,EAAEI,IACZC,QAASL,EAAEM,KACXC,YAAaP,EAAEO,gBARR,wBAAAf,EAAAgB,SAAApB,MAAF,yBAAAN,EAAA2B,MAAAC,KAAAC,YAAA,yGCEjB,IAAMC,EAAa,2BAaEC,cACnB,SAAAA,EAAYC,GAAqB,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAA2B,KAAAG,IAC/BE,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAA2B,KAAA3B,OAAAmC,EAAA,EAAAnC,CAAA8B,GAAAM,KAAAT,KAAMI,KACDM,MAAQ,CACX9B,OAAQ,IAHqByB,mFAOb,IAAAM,EAAAX,KAClB9B,EAAcC,gBAAgByC,KAAK,SAAAhC,GAAM,OACvC+B,EAAKE,SAAS,CACZjC,8CAMJ,OACEkC,EAAAtC,EAAAuC,cAAAD,EAAAtC,EAAAwC,SAAA,KACEF,EAAAtC,EAAAuC,cAAA,OAAKE,UAAWC,IAAInD,wBACpB+C,EAAAtC,EAAAuC,cAAA,OAAKE,UAAWC,IAAIpD,WAClBgD,EAAAtC,EAAAuC,cAACI,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,aACXC,QAAS,GAERxB,KAAKU,MAAM9B,OAAOS,IAAI,SAAAC,GAAC,OACtBwB,EAAAtC,EAAAuC,cAACI,EAAA,EAAD,CAAMM,IAAKnC,EAAEC,KAAMmC,MAAI,GACrBZ,EAAAtC,EAAAuC,cAACY,EAAD,CAAM3D,KAAMsB,iBA9BWsC,IAAMC,WAwC7C,SAASF,EAAKvB,GACZ,IAAM0B,EAAe5B,EAAaE,EAAMpC,KAAKyB,SACvCsC,EAAc7B,EAAaE,EAAMpC,KAAK2B,QAC5C,OACEmB,EAAAtC,EAAAuC,cAACiB,EAAA,EAAD,CAAMf,UAAWC,IAAIlD,MACnB8C,EAAAtC,EAAAuC,cAACkB,EAAA,EAAD,CACEC,OAAQpB,EAAAtC,EAAAuC,cAACoB,EAAA,EAAD,CAAQC,IAAKL,IACrBM,MAAOjC,EAAMpC,KAAKuB,KAClB+C,UAAWlC,EAAMpC,KAAK6B,cAExBiB,EAAAtC,EAAAuC,cAACwB,EAAA,EAAD,CAAWtB,UAAWC,IAAIjD,UAAWuE,MAAOV","file":"static/js/4.1c8a8f1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2roKQ\",\"dashboard__background\":\"Dashboard_dashboard__background__2Lv8Y\",\"hero\":\"Dashboard_hero__1XJ1G\",\"cardMedia\":\"Dashboard_cardMedia__2Gqx-\"};","import { IHero } from \"./Dashboard\";\r\n\r\nexport const heroesService = {\r\n    loadHeroStats: async () => {\r\n        const url = 'https://api.opendota.com/api/heroStats';\r\n        const response = await fetch(url);\r\n        const heroes = await response.json();\r\n        return heroes.map((x: any) => ({\r\n            name: x.localized_name,\r\n            imageUrl: x.img,\r\n            iconUrl: x.icon,\r\n            attack_type: x.attack_type\r\n        } as IHero));\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { heroesService } from \"./HeroService\";\r\nimport css from \"./Dashboard.module.scss\";\r\nimport { Card, Grid, Avatar, CardHeader, CardMedia } from \"@material-ui/core\";\r\n\r\nconst baseApiUrl = \"https://api.opendota.com\";\r\n\r\nexport interface IHero {\r\n  name: string;\r\n  imageUrl: string;\r\n  iconUrl: string;\r\n  attack_type: string;\r\n}\r\n\r\ninterface DashboardProps {\r\n  heroes: IHero[];\r\n}\r\n\r\nexport default class Dashboard extends React.Component<{}, DashboardProps> {\r\n  constructor(props: Readonly<{}>) {\r\n    super(props);\r\n    this.state = {\r\n      heroes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    heroesService.loadHeroStats().then(heroes =>\r\n      this.setState({\r\n        heroes\r\n      })\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <div className={css.dashboard__background} />\r\n        <div className={css.dashboard}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            {this.state.heroes.map(x => (\r\n              <Grid key={x.name} item>\r\n                <Hero hero={x} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Hero(props: { hero: IHero }) {\r\n  const imageFullUrl = baseApiUrl + props.hero.imageUrl;\r\n  const iconFullUrl = baseApiUrl + props.hero.iconUrl;\r\n  return (\r\n    <Card className={css.hero}>\r\n      <CardHeader\r\n        avatar={<Avatar src={iconFullUrl} />}\r\n        title={props.hero.name}\r\n        subheader={props.hero.attack_type}\r\n      />\r\n      <CardMedia className={css.cardMedia} image={imageFullUrl} />\r\n    </Card>\r\n  );\r\n}\r\n"],"sourceRoot":""}